{
  "publisher": "hazi",
  "name": "copelot",
  "displayName": "Copelot",
  "description": "Your free AI pair programmer",
  "version": "0.0.1",
  "pricing": "Free",
  "icon": "assets/icon.png",
  "license": "GPL-3.0-only",
  "engines": {
    "vscode": "^1.100.0",
    "npm": ">=9.0.0",
    "node": ">=20.18.1"
  },
  "categories": [
    "AI",
    "Chat"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/hazicy/copelot.git"
  },
  "extensionKind": [
    "ui"
  ],
  "activationEvents": [
    "onStartupFinished",
    "onLanguageModelChat:copelot",
    "onUri",
    "onFileSystem:ccreq",
    "onFileSystem:ccsettings"
  ],
  "main": "./dist/extension.js",
  "l10n": "./l10n",
  "scripts": {
    "vscode:prepublish": "pnpm run build",
    "package": "pnpm vsce package --no-dependencies",
    "publish": "pnpm vsce publish --no-dependencies",
    "compile": "pnpm run check-types && pnpm run lint && node esbuild.js",
    "watch:esbuild": "node esbuild.js --watch",
    "watch:tsc": "tsc --noEmit --watch --project tsconfig.json",
    "build": "pnpm run check-types && pnpm run lint && node esbuild.js --production",
    "watch-tests": "tsc -p . -w --outDir out",
    "compile-tests": "tsc -p . --outDir out",
    "pretest": "pnpm run compile-tests && pnpm run compile && pnpm run lint",
    "check-types": "tsc --noEmit",
    "lint": "eslint src",
    "test": "vscode-test"
  },
  "dependencies": {
    "@anthropic-ai/sdk": "^0.54.0",
    "@google/genai": "^1.4.0",
    "@vscode/l10n": "^0.0.18",
    "@vscode/prompt-tsx": "0.4.0-alpha.5",
    "@vscode/prompt-tsx-elements": "^0.1.0",
    "async-lock": "^1.4.1",
    "diff": "^8.0.2",
    "fastest-levenshtein": "^1.0.16",
    "js-tiktoken": "^1.0.20",
    "json-schema-to-typescript": "^15.0.4",
    "ollama": "^0.5.15",
    "openai": "^5.3.0",
    "tiktoken": "^1.0.21",
    "web-tree-sitter": "^0.25.6",
    "zod": "^3.24.2"
  },
  "devDependencies": {
    "@types/async-lock": "^1.4.2",
    "@types/diff": "^7.0.1",
    "@types/node": "~22.13.9",
    "@typescript-eslint/eslint-plugin": "^8.26.0",
    "@typescript-eslint/parser": "^8.26.0",
    "esbuild": "^0.24.0",
    "esbuild-plugin-copy": "^2.1.1",
    "eslint": "^9.22.0",
    "tree-sitter-cli": "^0.25.3",
    "tree-sitter-javascript": "^0.23.1",
    "typescript": "^5.7.2"
  },
  "contributes": {
    "languages": [
      {
        "id": "jsonc",
        "filenames": [
          "config.json"
        ]
      }
    ],
    "jsonValidation": [
      {
        "fileMatch": "**/.copelot/config.json",
        "url": "./config_schema.json"
      }
    ],
    "l10n": [
      {
        "id": "en",
        "path": "./locales/en.json"
      },
      {
        "id": "zh-cn",
        "path": "./locales/zh-cn.json"
      }
    ],
    "menus": {
      "scm/inputBox": [
        {
          "when": "scmProvider == git",
          "command": "copelot.git.generateCommitMessage"
        }
      ],
      "chat/modelPicker": [
        {
          "command": "copelot.openModelPicker",
          "when": "true"
        }
      ]
    },
    "languageModelTools": [],
    "chatParticipants": [
      {
        "id": "copelot.default",
        "name": "Copelot",
        "fullName": "Copelot",
        "description": "Ask copelot or type / for commands",
        "isDefault": true,
        "locations": [
          "panel"
        ],
        "modes": [
          "ask"
        ]
      },
      {
        "id": "copelot.editingSessionEditor",
        "name": "Copelot",
        "fullName": "Copelot",
        "description": "%copelot.editor.description%",
        "isDefault": true,
        "locations": [
          "editor",
          "notebook"
        ]
      },
      {
        "id": "copelot.editingSession",
        "name": "Copelot",
        "fullName": "Copelot",
        "description": "%copelot.edits.description%",
        "isDefault": true,
        "locations": [
          "editing-session"
        ],
        "modes": [
          "edit"
        ]
      },
      {
        "id": "copelot.editsAgent",
        "name": "agent",
        "fullName": "GitHub copelot",
        "description": "%copelot.agent.description%",
        "locations": [
          "editing-session"
        ],
        "modes": [
          "agent"
        ],
        "isDefault": true,
        "isAgent": true,
        "when": "config.chat.agent.enabled && !chatAgentModeDisallowed && !previewFeaturesDisabled"
      },
      {
        "id": "copelot.terminal",
        "name": "terminal",
        "fullName": "Terminal",
        "description": "%copilot.terminal.description%",
        "sampleRequest": "%copilot.terminal.sampleRequest%",
        "isDefault": true,
        "locations": [
          "terminal"
        ]
      },
      {
        "id": "copelot.workspace",
        "name": "workspace",
        "fullName": "Workspace",
        "description": "%copelot.workspace.description%",
        "sampleRequest": "%copelot.workspace.sampleRequest%",
        "locations": [
          "panel"
        ],
        "commands": [
          {
            "name": "explain",
            "description": "%copelot.workspace.explain.description%"
          },
          {
            "name": "tests",
            "description": "%copelot.workspace.tests.description%"
          },
          {
            "name": "fix",
            "description": "%copelot.workspace.fix.description%"
          },
          {
            "name": "new",
            "description": "%copelot.workspace.new.description%"
          }
        ]
      },
      {
        "id": "copelot.vscode",
        "name": "vscode",
        "fullName": "VS Code",
        "description": "%copilot.vscode.description%",
        "sampleRequest": "%copilot.vscode.sampleRequest%",
        "locations": [
          "panel"
        ]
      },
      {
        "id": "github.copilot.terminal",
        "name": "terminal",
        "fullName": "Terminal",
        "description": "%copilot.terminal.description%",
        "sampleRequest": "%copilot.terminal.sampleRequest%",
        "isDefault": true,
        "locations": [
          "terminal"
        ],
        "commands": [
          {
            "name": "explain",
            "description": "%copilot.terminal.explain.description%",
            "sampleRequest": "%copilot.terminal.explain.sampleRequest%"
          }
        ]
      }
    ],
    "configuration": {
      "title": "Inline Completion",
      "properties": {
        "requester.name": {
          "type": "string",
          "default": "请求者",
          "description": "聊天参数者名称",
          "scope": "window"
        },
        "requester.icon": {
          "type": "string",
          "default": "",
          "description": "聊天参数者图标",
          "scope": "window"
        },
        "inlineCompletion.apiKey": {
          "type": "string",
          "default": "sk-nuciupfmkhzykfyqznhncnephxuxuaqcfiawbwyngedpvgxc",
          "description": "API key for the completion service",
          "scope": "window"
        },
        "inlineCompletion.baseURL": {
          "type": "string",
          "default": "https://api.siliconflow.cn/v1",
          "description": "Base URL for the API endpoint",
          "scope": "window"
        },
        "inlineCompletion.model": {
          "type": "string",
          "default": "Qwen/Qwen2.5-Coder-32B-Instruct",
          "description": "Model to use for code completion",
          "enum": [
            "Qwen/Qwen2.5-Coder-32B-Instruct",
            "Qwen/Qwen2.5-Coder-7B-Instruct",
            "deepseek-ai/DeepSeek-Coder-V2-Instruct",
            "meta-llama/Llama-3.1-8B-Instruct"
          ],
          "enumDescriptions": [
            "Qwen 2.5 Coder 32B - Most capable model",
            "Qwen 2.5 Coder 7B - Faster, lighter model",
            "DeepSeek Coder V2 - Alternative coding model",
            "Llama 3.1 8B - General purpose model"
          ],
          "scope": "window"
        },
        "inlineCompletion.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable/disable inline completion",
          "scope": "window"
        },
        "inlineCompletion.maxTokens": {
          "type": "number",
          "default": 100,
          "minimum": 1,
          "maximum": 1000,
          "description": "Maximum number of tokens to generate",
          "scope": "window"
        },
        "inlineCompletion.temperature": {
          "type": "number",
          "default": 0.1,
          "minimum": 0,
          "maximum": 2,
          "description": "Temperature for completion generation (0 = deterministic, higher = more creative)",
          "scope": "window"
        },
        "inlineCompletion.triggerLength": {
          "type": "number",
          "default": 3,
          "minimum": 1,
          "maximum": 20,
          "description": "Minimum number of characters to type before triggering completion",
          "scope": "window"
        },
        "inlineCompletion.debounceMs": {
          "type": "number",
          "default": 300,
          "minimum": 0,
          "maximum": 2000,
          "description": "Debounce delay in milliseconds before requesting completion",
          "scope": "window"
        },
        "chatModels.models": {
          "type": "array",
          "default": [],
          "description": "AI模型配置列表",
          "items": {
            "type": "object",
            "properties": {
              "modelID": {
                "type": "string",
                "description": "模型ID"
              },
              "baseURL": {
                "type": "string",
                "description": "API基础URL"
              },
              "apiKey": {
                "type": "string",
                "description": "API密钥"
              },
              "family": {
                "type": "string",
                "description": "模型系列"
              },
              "vendor": {
                "type": "string",
                "description": "供应商"
              },
              "maxInputTokens": {
                "type": "number",
                "description": "最大输入token数"
              },
              "maxOutputTokens": {
                "type": "number",
                "description": "最大输出token数"
              },
              "name": {
                "type": "string",
                "description": "模型名称"
              },
              "version": {
                "type": "string",
                "description": "版本"
              },
              "isDefault": {
                "type": "boolean",
                "description": "是否为默认模型"
              },
              "isUserSelectable": {
                "type": "boolean",
                "description": "用户是否可选择"
              },
              "capabilities": {
                "type": "object",
                "properties": {
                  "agentMode": {
                    "type": "boolean",
                    "description": "是否支持代理模式"
                  }
                }
              }
            }
          }
        }
      }
    },
    "viewsWelcome": [],
    "commands": [
      {
        "command": "copelot.git.generateCommitMessage",
        "title": "Generate Commit Message",
        "icon": "$(sparkle)"
      },
      {
        "command": "copelot.openModelPicker",
        "title": "%copelot.command.openModelPicker%"
      },
      {
        "command": "copelot.chatExplain",
        "title": "解释代码"
      },
      {
        "command": "copelot.chatFix",
        "title": "修复代码"
      },
      {
        "command": "extension.jumpToSymbol",
        "title": "Jump to Symbol",
        "category": "Symbol Navigation"
      },
      {
        "command": "extension.findSymbolReferences",
        "title": "Find Symbol References",
        "category": "Symbol Navigation"
      },
      {
        "command": "extension.goToSymbolDefinition",
        "title": "Go to Symbol Definition",
        "category": "Symbol Navigation"
      }
    ],
    "icons": {
      "copelot-logo": {
        "description": "Flexpilot Default Logo",
        "default": {
          "fontPath": "assets/copelot.woff",
          "fontCharacter": "\\0041"
        }
      },
      "copelot-warning": {
        "description": "Flexpilot Default Logo",
        "default": {
          "fontPath": "assets/copelot.woff",
          "fontCharacter": "\\0042"
        }
      },
      "copelot-notconnected": {
        "description": "Flexpilot Default Logo",
        "default": {
          "fontPath": "assets/copelot.woff",
          "fontCharacter": "\\0043"
        }
      }
    },
    "iconFonts": [
      {
        "id": "copelot-font",
        "src": [
          {
            "path": "assets/copelot.woff",
            "format": "woff"
          }
        ]
      }
    ],
    "languageModels": {
      "vendor": "copelot"
    }
  },
  "enabledApiProposals": [
    "extensionsAny",
    "newSymbolNamesProvider",
    "interactive",
    "codeActionAI",
    "activeComment",
    "commentReveal",
    "contribCommentThreadAdditionalMenu",
    "contribCommentsViewThreadMenus",
    "documentFiltersExclusive",
    "embeddings",
    "findTextInFiles",
    "findTextInFiles2",
    "findFiles2",
    "textSearchProvider",
    "terminalDataWriteEvent",
    "terminalExecuteCommandEvent",
    "terminalSelection",
    "terminalQuickFixProvider",
    "mappedEditsProvider",
    "aiRelatedInformation",
    "chatParticipantAdditions",
    "chatEditing",
    "inlineEdit",
    "defaultChatParticipant",
    "contribSourceControlInputBoxMenu",
    "authLearnMore",
    "testObserver",
    "aiTextSearchProvider",
    "chatParticipantPrivate",
    "chatProvider",
    "contribDebugCreateConfiguration",
    "chatReferenceDiagnostic",
    "textSearchProvider2",
    "chatReferenceBinaryData",
    "languageModelSystem",
    "languageModelCapabilities",
    "inlineCompletionsAdditions",
    "languageModelDataPart",
    "chatStatusItem"
  ]
}
